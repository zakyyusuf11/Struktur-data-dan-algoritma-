#include <stdio.h>
#include <stdlib.h>

#define MAX 5
typedef struct {
    int data[MAX];
    int front;
    int rear;
} Queue;

void initQueue(Queue *q) {
    q->front = -1;
    q->rear = -1;
}


int isEmpty(Queue *q) {
    return (q->front == -1);
}

int isFull(Queue *q) {
    return (q->rear == MAX - 1);
}


void enqueue(Queue *q, int value) {
    if (isFull(q)) {
        printf("Antrian penuh, tidak dapat menambahkan elemen\n");
        return;
    }
    if (isEmpty(q)) {
        q->front = 0;
    }
    q->rear++;
    q->data[q->rear] = value;
    printf("%d berhasil ditambahkan ke antrian\n", value);
}


int dequeue(Queue *q) {
    if (isEmpty(q)) {
        printf("Antrian kosong, tidak dapat menghapus elemen\n");
        return -1;
    }
    int value = q->data[q->front];
    if (q->front == q->rear) { 
        q->front = -1;
        q->rear = -1;
    } else {
        q->front++;
    }
    return value;
}

// Menampilkan elemen dalam antrian
void displayQueue(Queue *q) {
    if (isEmpty(q)) {
        printf("Antrian kosong\n");
        return;
    }
    printf("Elemen dalam antrian: ");
    for (int i = q->front; i <= q->rear; i++) {
        printf("%d ", q->data[i]);
    }
    printf("\n");
}

int main() {
    Queue q;
    initQueue(&q);

    int choice, value;

    while (1) {
        printf("\nMenu:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Tampilkan Antrian\n");
        printf("4. Keluar\n");
        printf("Pilih opsi: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Masukkan nilai yang akan ditambahkan: ");
                scanf("%d", &value);
                enqueue(&q, value);
                break;
            case 2:
                value = dequeue(&q);
                if (value != -1) {
                    printf("%d berhasil dihapus dari antrian\n", value);
                }
                break;
            case 3:
                displayQueue(&q);
                break;
            case 4:
                exit(0);
            default:
                printf("Opsi tidak valid\n");
        }
    }

    return 0;
}
